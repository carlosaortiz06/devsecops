name: CI/CD - Frontend & Backend

on:
  push:
    paths:
      - 'prueba-backend/**'
      - 'backend-ci.yml'
      - 'prueba-frontend/**'

  pull_request:
    paths:
      - 'prueba-backend/**'
      - 'backend-ci.yml'
      - 'prueba-frontend/**'

jobs:
  # Backend Job
  build-test-analyze-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code for Backend
        uses: actions/checkout@v4

      - name: Set up JDK 17 for Backend
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages for Backend
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build and test Backend
        working-directory: prueba-backend
        run: mvn clean verify

      - name: Install Git Secrets for Backend
        run: |
            sudo apt-get update
            sudo apt-get install git-secrets

      - name: Scan for secrets in Backend
        run: |
            git secrets --scan

      - name: Run SonarCloud Analysis for Backend
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: prueba-backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Install Trivy for Backend
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.50.1/trivy_0.50.1_Linux-64bit.tar.gz
          tar zxvf trivy_0.50.1_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      - name: Scan Backend dependencies with Trivy
        run: trivy fs --scanners vuln --format json --severity HIGH,CRITICAL --output trivy_report.json .

      - name: List files after Trivy scan for Backend
        run: ls -la

      - name: Upload Trivy JSON report for Backend
        uses: actions/upload-artifact@v4
        with:
            name: trivy-json-report-backend
            path: trivy_report.json

      - name: Build Docker Image for Backend
        run: docker build -t backend:latest prueba-backend

      - name: Scan Docker Image with Trivy for Backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: backend:latest


      - name: SonarCloud Quality Gate Check for Backend
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: prueba-backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: false

      - name: Deploy to ECS for Backend
        run: |
          aws ecs update-service --cluster my-backend-cluster --service my-backend-service --force-new-deployment --region us-east-1

  # Frontend Job
  build-test-deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code for Frontend
        uses: actions/checkout@v4

      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies for Frontend
        run: |
          cd prueba-frontend
          npm install

      - name: Run tests for Frontend
        run: |
          cd prueba-frontend
          npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Run SonarCloud Analysis for Frontend
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: prueba-frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Install Trivy for Frontend
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.50.1/trivy_0.50.1_Linux-64bit.tar.gz
          tar zxvf trivy_0.50.1_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      - name: Scan Frontend dependencies with Trivy
        run: trivy fs --scanners vuln --format json --severity HIGH,CRITICAL --output trivy_report.json .

      - name: List files after Trivy scan for Frontend
        run: ls -la

      - name: Upload Trivy JSON report for Frontend
        uses: actions/upload-artifact@v4
        with:
            name: trivy-json-report-frontend
            path: trivy_report.json

      - name: Build Angular application for Frontend
        run: |
          cd prueba-frontend
          npm run build -- --configuration production

      - name: Build Docker image for Frontend
        run: |
          docker build -t prueba-frontend:latest prueba-frontend

      - name: Scan Docker Image with Trivy for Frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: prueba-frontend:latest


      - name: SonarCloud Quality Gate Check for Frontend
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: prueba-frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: false

